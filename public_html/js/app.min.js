;( function( $ ) {
    "use strict";

    $.app = {

        initSandwich: function() {
            $.app.sandwich.init({
                keyHooks: !0,
                selector: '.js-sandwich-menu',
                wrapper: '.layout-wrapper',
                overlay: '#menu-overlay'
            });
        },

        initMask: function() {
            $(".j-phone-mask").mask("+7 (999) 999-99-99");
        },

        initPopup: function()
        {
            $.popup.init('.js-open-popup', {
                cssPosition: false,
                wrapper: '.layout-wrapper'
            });
        },

        initDocuments: function() {
            $('body').on('click', '.j-load-documents', function(e) {
                var motion = $(this).data('motion');

                if (motion == 'show') {
                    $(this).data('motion', 'hide');
                    $('#documents').find('.is-motion').removeClass('is-hidden');
                }
                else {
                    $(this).data('motion', 'show');

                    $('html, body').stop().animate({ 'scrollTop': $('#documents-anchor').offset().top }, 'fast');

                    setTimeout(function(){
                        $('#documents').find('.is-motion').addClass('is-hidden');
                    }, 200);
                }

                $(this).closest('.page-button').toggleClass('_down').toggleClass('_up');
            });
        },

        initBlock: function (selector) {
            $(selector).magnificPopup({
                type: 'image',
                delegate: 'a.zoom',
                closeOnContentClick: true,
                closeBtnInside: false,
                fixedContentPos: true,
                mainClass: 'mfp-no-margins mfp-with-zoom',
                image: {
                    verticalFit: true
                },
                gallery: {
                    enabled:true
                }
            });
        },

        initZoom: function () {

            this.initBlock('.j-gallery');
            this.initBlock('.j-timeline');
            this.initBlock('.j-documents');
            this.initBlock('.j-floors');
        },

        initTabs: function() {
            $('body').on('click', '.j-tab', function(e) {
                e.preventDefault();

                if (!$(this).hasClass('current')) {
                    var tab = $(this).attr('href').substr(2),
                        wrapper = $(this).data('wrapper');

                    $(this).closest('.j-tab-closest').find('.current').removeClass('current');

                    if ($('#tab-' + wrapper).length) {
                        var $items = $('#tab-' + wrapper).find('.is-item');

                        $items.removeClass('is-show');
                        $items.filter('.' + tab).addClass('is-show');
                    }

                    $(this).addClass('current');

                    var $cover = $(this).closest('.j-tabs-cover');
                    var $content = $cover.find('.j-tabs-content');

                    if ($content.hasClass('active')) {
                        $content.removeClass('animate');
                        
                        setTimeout(function(){
                            $content.removeClass('active');
                        }, 300);
                    }
                }
                
                return !1;
            });

            $('body').on('click', '.j-tabs-trigger', function(){
                var $cover = $(this).closest('.j-tabs-cover');
                if ($cover.length) {
                    var $content = $cover.find('.j-tabs-content');
                    
                    if ($content.hasClass('active')) {
                        $content.removeClass('animate');
                        
                        setTimeout(function(){
                            $content.removeClass('active');
                        }, 300);
                    }
                    else {
                        $content.addClass('active');
                        
                        setTimeout(function(){
                            $content.addClass('animate');
                        }, 10);
                    }
                }
            });
        },

        initCarousel: function() {

            $('.j-carousel').slick({
                dots: false,
                infinite: true,
                draggable: true,
                speed: 259,
                slidesToShow: 4,
                slidesToScroll: 1,
                prevArrow: '<button type="button" class="carousel__navigation _prev slick-prev"></button>',
                nextArrow: '<button type="button" class="carousel__navigation _next slick-next"></button>',
                responsive: [
                    {
                        breakpoint: 768,
                        settings: {
                            slidesToShow: 3,
                            slidesToScroll: 3,
                        }
                    },
                    {
                        breakpoint: 568,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: 2
                        }
                    },
                    {
                        breakpoint: 375,
                        settings: {
                            fade: true,
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    }
                ]
            });

        },

        initSlider: function() {

            $('.j-slider').slick({
                dots: false,
                infinite: true,
                draggable: true,
                fade: true,
                speed: 700,
                slidesToShow: 1,
                slidesToScroll: 1,
                prevArrow: '<button type="button" class="about__slider__navi _prev slick-prev"></button>',
                nextArrow: '<button type="button" class="about__slider__navi _next slick-next"></button>'
            });

        },

        initSwitcher: function() {
            var $slider = $('#slider'), timeout = 6000, intervalID = null;

            $('body').on('change', '.j-switcher', function(){
                var daytime = $(this).val();
                $slider.find('.j-slider-item._active').addClass('_last-active');

                $slider.find('.j-slider-item._active').removeClass('_active');
                $slider.find('.j-slider-item').filter('[data-daytime="' + daytime + '"]').addClass('_active');

                setTimeout(function(){
                    $slider.find('.j-slider-item._last-active').removeClass('_last-active');
                }, 1000);
            });

            function startInterval() {
                clearInterval(intervalID);
                return setInterval(function(){
                    $('#slider-next').trigger('click');
                }, timeout);
            }

            function stopInterval(interval) {
                clearInterval(interval);
            }

            intervalID = startInterval();

            $('body').on('click', '.j-slider-navigation', function(){
                var direction = $(this).data('direction');

                stopInterval(intervalID);

                var $group = $slider.find('.j-slider-item._active'),
                    _count = $group.find('.j-slider-image').length - 1,
                    _index = $group.find('.j-slider-image._active').index(),
                    _next = 0;

                if (direction == 'prev') {
                    _next = _index - 1;
                }
                else if (direction == 'next') {
                    _next = _index + 1;
                }

                if (_next > _count) {
                    _next = 0;
                }
                
                if (_next < 0) {
                    _next = _count;
                }

                $group.find('.j-slider-image._active').addClass('_last-active');
                $group.find('.j-slider-image._active').removeClass('_active');
                $group.find('.j-slider-image').eq(_next).addClass('_active');

                setTimeout(function(){
                    $group.find('.j-slider-image._last-active').removeClass('_last-active');
                    intervalID = startInterval();
                }, 1000);
            });
        },

        initPlans: function() {
            var $popup = null;

            $('body').on('click', '.j-plans-layout', function(e){
                e.preventDefault();
                
                var image = $(this).attr('href'),
                    title = $(this).attr('title');

                $popup = $(template('tmpl-popup-layout', {
                    'title': title,
                    'image': image
                }));

                $popup.addClass('temp');
                
                $('body').append($popup);
                
                $.popup.show($popup, false, true);

                return !1;
            });
        },

        initLocation: function() {
            var $mobile = $('#location-mobile'), $content = null, number = 0;
            
            $mobile.find('.j-close').on('click', function(){
                $mobile.addClass('is-disabled');
                $content = $mobile.find('.j-content');

                $content.removeClass('_animate');

                setTimeout(function(){
                    $content.removeClass('_active');

                    $mobile.addClass('is-hidden').removeClass('is-disabled');
                }, 300);
            });

            $('body').on('click', '.j-loc-flag', function(){
                $mobile.removeClass('is-hidden');
                $content = $mobile.find('.j-content');

                $content.find('.j-content-middle').html($(this).closest('.location__item').find('.location__item__content').html());

                $content.addClass('_active');
                
                number = $(this).data('number');

                $mobile.removeClass('_num-1 _num-2 _num-3 _num-4 _num-5 _num-6').addClass('_num-' + number);

                setTimeout(function(){
                    $content.addClass('_animate');
                }, 10);
            });
        },

        initClose: function() {
            $('body').click(function(){
                if ($('#banner').length) {
                    var $banner = $('#banner');

                    if ($banner.hasClass('show')) {
                        $banner.removeClass('animate');

                        setTimeout(function(){
                            $banner.removeClass('show');
                        }, 300);
                    }
                }
            });
        },

        initBanner: function(delay) {
            var _this = this;

            if ($('#banner').length) {
                var $banner = $('#banner');
                
                if (!$.cookie('hideModal')) {
                    setTimeout(function(){
                        $banner.addClass('show');
                        
                        setTimeout(function(){
                            $banner.addClass('animate');
                        }, 10);

                        _this.initClose();

                    }, delay * 1000)
                }
                
                $.cookie('hideModal', true, {
                    expires: 7,
                    path: '/'
                });
            }
        },

        init: function() {
            this.initBanner(10);
            this.initTabs();
            this.initZoom();
            this.initPlans();
            this.initPopup();
            this.initSlider();
            this.initSandwich();
            this.initSwitcher();
            this.initLocation();
            this.initCarousel();
            this.initDocuments();
        }
    };

})( jQuery );
;( function( $ ) {
    "use strict";

    $.app = $.app = $.app || {};

    var body = $('body'), _this;

    $.app.ajaxForm = {

        config: {
            form_class: '.form-ajax',
            form_reset: 'form-reset',
            link_class: '.js-request-link',
            error_class: 'error',
            error_message: 'form__error-message',
            error_message_class: 'j-error-message',
            error_message_addclass: 'show',
            form_label: '.form__wrapper',
            checkbox_label: 'checkbox__label'
        },

        callback_stack: {},

        extend: function(config)
        {
            _this = this;

            if (typeof config !== 'undefined')
            {
                var x;
                for (x in config)
                {
                    if (typeof _this.config[x] !== 'undefined')
                        _this.config[x] = config[x];
                }
            }
        },

        default_handler: function(form, response)
        {
            _this = this;

            if (response.status)
            {
                if (response.hasOwnProperty('redirect_url'))
                {
                    window.location.href = response.redirect_url;
                }
            }
            else if (typeof response.errors !== 'undefined' || typeof response.error_message !== 'undefined')
            {
                var errors, error_message;

                if (typeof response.errors !== 'undefined')
                {
                    errors = response.errors;
                }

                if (typeof response.error_message !== 'undefined')
                {
                    error_message = response.error_message;
                }

                _this.validation(form, errors, response.error_message);
            }

            if (response.hasOwnProperty('open_popup'))
            {
                if ($('body').find('.popup.is-open').length)
                {
                    $.popup.close($('body').find('.popup.is-open'), function(){
                        $.popup.open(response.open_popup);
                    });
                }
                else
                {
                    $.popup.open(response.open_popup);
                }
            }

            if (response.hasOwnProperty('message'))
            {
                $.popup.message(response.title, response.message);
            }

        },

        validation: function(form, errors, error_message)
        {
            _this = this;

            form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
            form.find('.' + _this.config.error_message).remove();
            form.find('.' + _this.config.error_message_class).removeClass(_this.config.error_message_addclass);

            var fieldName, field;

            setTimeout(function() {
                if (typeof error_message !== 'undefined' && error_message !== '')
                {
                    form.find('.' + _this.config.error_message_class).html(error_message);
                    form.find('.' + _this.config.error_message_class).addClass(_this.config.error_message_addclass);
                }

                if (typeof errors !== 'undefined' && errors !== '')
                {
                    for(fieldName in errors)
                    {
                        if (form.find('input[name="'+fieldName+'"]').length > 0)
                        {
                            field = form.find('input[name="'+fieldName+'"]');
                        }

                        if (form.find('select[name="'+fieldName+'"]').length > 0)
                        {
                            field = form.find('select[name="'+fieldName+'"]');
                        }

                        if (form.find('textarea[name="'+fieldName+'"]').length > 0)
                        {
                            field = form.find('textarea[name="'+fieldName+'"]');
                        }

                        if (field.closest('.' + _this.config.checkbox_label).length > 0)
                        {
                            field = field.closest('.' + _this.config.checkbox_label);
                        }

                        if (typeof field !== 'undefined')
                        {
                            field.addClass(_this.config.error_class);
                            field.closest(_this.config.form_label).append('<div class="' + _this.config.error_message + '">' + errors[fieldName] + '</div>');
                        }
                    }
                }
            }, 10);
        },

        upload: function()
        {
            _this = this;

            body.on('submit', '.form-file-upload', function(e) {
                return AIM.submit(this, {
                    onStart: function()
                    {

                    },
                    onComplete: function(result)
                    {
                        if (typeof result === 'object' && result.status === true && result.hasOwnProperty('photo_url'))
                        {

                        }
                    }
                });
            });

            $(document).on('change', '.upload_button_onchange', function(){
                if ($(this).closest('.upload_button').find('.upload_button_field').length > 0)
                {
                    $(this).closest('.upload_button').find('.upload_button_field').html($(this).val());
                }
            });
        },

        send: function(action, method, data, cb, err)
        {

            if (typeof cb !== 'function')
            {
                cb = function() {};
            }

            if (typeof err !== 'function')
            {
                err = function() {};
            }

            try {

                $.ajax({
                    url: action,
                    type: method,
                    data: data,
                    contentType: false,
                    processData: method.toLowerCase() == 'get',
                    success: cb,
                    error: err,
                    dataType: 'JSON'
                });

            } catch(e){}

        },

        initLink: function()
        {
            _this = this;

            body.on('click', _this.config.link_class, function(e) {
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                var link = $(this);

                if (link.data('is-busy')) {
                    return;
                }

                link.data('is-busy', true);

                var action = ($(this).attr('href')) || $(this).data('action'),
                    method = ($(this).data('method')) || 'get',
                    data = {};

                _this.send(
                    action,
                    method,
                    data,
                    function(response)
                    {
                        if (link.data('callback') && _this.callback_stack.hasOwnProperty(link.data('callback')))
                        {
                            _this.callback_stack[link.data('callback')](link, response);
                        }
                        else
                        {
                            _this.default_handler(link, response);
                        }

                        if (response.status === true)
                        {

                        }

                        link.data('is-busy', false);
                    },
                    function(response)
                    {
                        _this.default_handler(link, response);
                        link.data('is-busy', false);
                    }
                );
            });
        },

        initForm: function()
        {
            _this = this;

            body.on('submit', _this.config.form_class, function(e) {
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                var form    = $(this),
                    action  = form.attr('action'),
                    method  = (form.attr('method') || 'post'),
                    data    = !!window.FormData ? new FormData(form[0]) : form.serialize();

                if (form.data('is-busy')) {
                    return;
                }

                form.data('is-busy', true);

                if (typeof button !== 'undefined')
                {
                    if (button.data('loading'))
                    {
                        button.data('original', button.text());
                        button.text(button.data('loading'));
                    }

                    button.addClass('preload');
                }

                if (form.data('precallback') && _this.callback_stack.hasOwnProperty(form.data('precallback'))) {
                    if(!_this.callback_stack[form.data('precallback')](form))
                    {
                        return false;
                    }
                }

                _this.send(
                    action,
                    method,
                    data,
                    function(response)
                    {
                        if (form.data('callback') && _this.callback_stack.hasOwnProperty(form.data('callback')))
                        {
                            _this.callback_stack[form.data('callback')](form, response);
                        }
                        else
                        {
                            _this.default_handler(form, response);
                        }

                        if (response.status === true)
                        {
                            if (form.hasClass(_this.config.form_reset))
                            {
                                form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
                                form.get(0).reset();
                            }
                        }

                        if (typeof button !== 'undefined')
                        {
                            if (button.data('original'))
                            {
                                button.text(button.data('original'));
                            }

                            button.removeClass('preload');
                        }

                        form.data('is-busy', false);
                    },
                    function(response)
                    {
                        _this.default_handler(form, response);
                        form.data('is-busy', false);
                    }
                );
            });
        },

        init: function(config)
        {
            this.extend(config);

            this.initForm();
            this.initLink();
        }
    };

    $.app.ajaxForm.init();

})( jQuery );

;(function ($) {
    "use strict";

    var _this;

    $.app = $.app || {};

    $.app.sandwich = {

        config: {
            keyHooks: !1,
            selector: '.js-sandwich-menu',
            wrapper: '.layout-wrapper',
            overlay: '.overlay'
        },

        extend: function(config)
        {
            _this = this;

            if (typeof config !== 'undefined')
            {
                var x;
                for (x in config)
                {
                    if (typeof _this.config[x] !== 'undefined')
                        _this.config[x] = config[x];
                }
            }
        },

        isOpen: function()
        {
            return $('body').hasClass('page-visible');
        },

        hide: function()
        {
            $('body').removeClass('page-open');

            setTimeout(function(){
                $('body').removeClass('page-visible');
            }, 10);

            $(this.config.overlay).css({
                'visibility': 'hidden'
            });
        },

        toggle: function()
        {
            if ($('body').hasClass('page-visible'))
            {
                setTimeout(function(){
                    $('body').removeClass('page-visible');
                }, 10);
            }
            else
            {
                setTimeout(function(){
                    $('body').addClass('page-visible');
                }, 10);
            }

            $('body').toggleClass('page-open');

            var visibility = 'visible';

            if (!$('body').hasClass('page-open'))
            {
                visibility = 'hidden'
            }
            
            $(_this.config.overlay).css({
                'visibility': visibility
            });
        },

        sandwichTrigger: function()
        {
            _this = this;

            if (_this.config.keyHooks)
            {
                $('body').on('keydown', function(e) {
                    if(e.keyCode == 27 && _this.isOpen())
                    {
                        _this.toggle();
                    }
                });
            };

            $('body').on('click', _this.config.selector, function(e){
                e.preventDefault ? e.preventDefault() : e.returnValue = false;
                _this.toggle();
            });
        },

        overlayTrigger: function()
        {
            _this = this;

            $('body').on('click', _this.config.overlay, function(e){
                _this.hide();
            });
        },

        init: function(config)
        {
            this.extend(config);
            
            this.sandwichTrigger();
            this.overlayTrigger();
        }

    };

})(jQuery);
 
"use strict";

function is_null(x)
{
    return x == null;
}

function is_undefined(x)
{
    return typeof(x) == 'undefined';
}

function goPage(sPage) { window.location.href = sPage; }

function lockScroll(element) {
    var lockX, lockY, events = ['scroll', 'mousewheel', 'touchmove'], keys = {37: 1, 38: 1, 39: 1, 40: 1};

    function preventDefault(e) {
        e = e || window.event;
        if (e.preventDefault)
          e.preventDefault();
        e.returnValue = false;  
    }

    function preventDefaultForScrollKeys(e) {
        if (keys[e.keyCode]) {
            preventDefault(e);
            return false;
        }
    }

    function disableScroll() {
        if (window.addEventListener) // older FF
            window.addEventListener('DOMMouseScroll', preventDefault, false);
        window.onwheel = preventDefault; // modern standard
        window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE
        window.ontouchmove  = preventDefault; // mobile
        document.onkeydown  = preventDefaultForScrollKeys;
    }

    function enableScroll() {
        if (window.removeEventListener)
            window.removeEventListener('DOMMouseScroll', preventDefault, false);
        window.onmousewheel = document.onmousewheel = null; 
        window.onwheel = null; 
        window.ontouchmove = null;  
        document.onkeydown = null;  
    }
}
(function($) {
    "use strict";

    var that, top, changeItem, scrollToAnchor, $target, $element, $current, $navigationMap, $navigation = $('#navigation'), $hasScroll = $('html, body');
    var is_mobile = $(window).width() <= 667;

    $navigationMap = $('.j-section').map(function(){
        return {
            offset: $(this).offset().top - 115,
            element: $(this)
        }
    });

    changeItem = function(scrollTop) {
        $element = null;

        $navigationMap.map(function(){
            that = $(this)[0];
            if (that.offset < scrollTop) {
                $element = that.element; 
            }
        })

        if ($element !== null && $element.attr('id')) {
           
            $current = $navigation.find('.j-navigation[href="#' + $element.attr('id').split('-')[0] + '-section"]');

            if (!$current.hasClass('current')) {
                $navigation.find('.j-navigation.current').removeClass('current');
                $current.addClass('current');
            }
        }
    }

    scrollToAnchor = function(hash, animate) {
        hash = hash.replace('-section', '').split('?')[0];

        $target = $(hash + '-anchor');

        if ($target.length)
        {
            top = $target.offset().top - 95;
            is_mobile = $(window).width() <= 667;

            if (animate) {
                $hasScroll.stop().animate({ 'scrollTop': top }, 'medium', function(){
                    $navigation.removeClass('is-disabled');
                });
            }
            else {
                $hasScroll.scrollTop(top);
            }
        }
    }

    $('body').on('click', '.j-navigation', function(e) {
        $navigation.addClass('is-disabled');
        scrollToAnchor(this.hash, true);
    });

    setTimeout(function(){
        if (window.location.hash.length > 1) {
            $navigation.addClass('is-disabled');
            scrollToAnchor(window.location.hash, false);
        }
    }, 50);

    $(window).scroll(function(){
        changeItem($(window).scrollTop())
    });
})(jQuery);
function yandexMap() {
    ymaps.ready(function () {
        var YMap, myPlacemark, is_mobile = $(window).width() <= 667;
        
        YMap = new ymaps.Map('location-map', {
            center: [45.021188,38.926667],
            zoom: 16,
            controls: ['zoomControl', 'fullscreenControl']
        });

        YMap.behaviors.disable('multiTouch');
        YMap.behaviors.disable('scrollZoom');
        YMap.controls.get('zoomControl').options.set('size', 'small');
        YMap.controls.get('zoomControl').options.set('position', { right: 10, top: 50 });

        if (is_mobile) {
            YMap.behaviors.disable('drag');
        }

        myPlacemark = new ymaps.Placemark(YMap.getCenter(), {}, {
            iconLayout: 'default#image',
            iconImageHref: '/images/vinograd-logo.png',
            iconImageSize: [141, 141],
            iconImageOffset: [-71, -71]
        });

        YMap.geoObjects.add(myPlacemark);
    });
}
$(document).ready(function() {
    $.app.init();
});
//# sourceMappingURL=data:application/json;base64,

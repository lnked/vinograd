"use strict";

function is_null(x)
{
    return x == null;
}

function is_undefined(x)
{
    return typeof(x) == 'undefined';
}

function goPage(sPage) { window.location.href = sPage; }

function lockScroll(element) {
    var lockX, lockY, events = ['scroll', 'mousewheel', 'touchmove'], keys = {37: 1, 38: 1, 39: 1, 40: 1};

    function preventDefault(e) {
        e = e || window.event;
        if (e.preventDefault)
          e.preventDefault();
        e.returnValue = false;  
    }

    function preventDefaultForScrollKeys(e) {
        if (keys[e.keyCode]) {
            preventDefault(e);
            return false;
        }
    }

    function disableScroll() {
        if (window.addEventListener) // older FF
            window.addEventListener('DOMMouseScroll', preventDefault, false);
        window.onwheel = preventDefault; // modern standard
        window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE
        window.ontouchmove  = preventDefault; // mobile
        document.onkeydown  = preventDefaultForScrollKeys;
    }

    function enableScroll() {
        if (window.removeEventListener)
            window.removeEventListener('DOMMouseScroll', preventDefault, false);
        window.onmousewheel = document.onmousewheel = null; 
        window.onwheel = null; 
        window.ontouchmove = null;  
        document.onkeydown = null;  
    }
}
(function($) {
    "use strict";

    var that, top, changeItem, scrollToAnchor, $target, $element, $current, $navigationMap, $navigation = $('#navigation'), $hasScroll = $('html, body');
    var is_mobile = $(window).width() <= 667;

    $navigationMap = $('.j-section').map(function(){
        return {
            offset: $(this).offset().top - 115,
            element: $(this)
        }
    });

    changeItem = function(scrollTop) {
        $element = null;

        $navigationMap.map(function(){
            that = $(this)[0];
            if (that.offset < scrollTop) {
                $element = that.element; 
            }
        })

        if ($element !== null && $element.attr('id')) {
           
            $current = $navigation.find('.j-navigation[href="#' + $element.attr('id').split('-')[0] + '-section"]');

            if (!$current.hasClass('current')) {
                $navigation.find('.j-navigation.current').removeClass('current');
                $current.addClass('current');
            }
        }
    }

    scrollToAnchor = function(hash, animate) {
        hash = hash.replace('-section', '');
        $target = $(hash + '-anchor');

        if ($target.length)
        {
            top = $target.offset().top - 95;
            is_mobile = $(window).width() <= 667;

            if (animate) {
                $hasScroll.stop().animate({ 'scrollTop': top }, 'medium', function(){
                    $navigation.removeClass('is-disabled');
                });
            }
            else {
                $hasScroll.scrollTop(top);
            }
        }
    }

    $('body').on('click', '.j-navigation', function(e) {
        $navigation.addClass('is-disabled');
        scrollToAnchor(this.hash, true);
    });

    setTimeout(function(){
        if (window.location.hash.length > 1) {
            $navigation.addClass('is-disabled');
            scrollToAnchor(window.location.hash, true);
        }
    }, 50);

    $(window).scroll(function(){
        changeItem($(window).scrollTop())
    });
})(jQuery);
function yandexMap() {
    ymaps.ready(function () {
        var YMap, myPlacemark;
        
        YMap = new ymaps.Map('location-map', {
            center: [45.030203, 38.940457],
            zoom: 16,
            controls: ['zoomControl', 'fullscreenControl']
        });

        YMap.behaviors.disable('scrollZoom');
        YMap.controls.get('zoomControl').options.set('size', 'small');
        YMap.controls.get('zoomControl').options.set('position', { right: 10, top: 50 });

        myPlacemark = new ymaps.Placemark(YMap.getCenter(), {}, {
            iconLayout: 'default#image',
            iconImageHref: '/images/vinograd-logo.png',
            iconImageSize: [141, 141],
            iconImageOffset: [-71, -71]
        });

        YMap.geoObjects.add(myPlacemark);
    });
}
(function(body){
    "use strict";

    var app = {

        initMask: function() {
            $(".j-phone-mask").mask("+7 (999) 999-99-99");
        },

        initPopup: function()
        {
            $.popup.init('.js-open-popup', {
                cssPosition: false,
                wrapper: '.layout-wrapper'
            });
        },

        initDocuments: function() {
            $('body').on('click', '.j-load-documents', function(e) {
                var motion = $(this).data('motion');

                if (motion == 'show') {
                    $(this).data('motion', 'hide');
                    $('#documents').find('.is-motion').removeClass('is-hidden');
                }
                else {
                    $(this).data('motion', 'show');

                    $('html, body').stop().animate({ 'scrollTop': $('#documents-anchor').offset().top }, 'fast');

                    setTimeout(function(){
                        $('#documents').find('.is-motion').addClass('is-hidden');
                    }, 200);
                }

                $(this).closest('.page-button').toggleClass('_down').toggleClass('_up');
            });
        },

        initBlock: function (selector) {
            $(selector).magnificPopup({
                type: 'image',
                delegate: 'a.zoom',
                closeOnContentClick: true,
                closeBtnInside: false,
                fixedContentPos: true,
                mainClass: 'mfp-no-margins mfp-with-zoom',
                image: {
                    verticalFit: true
                },
                gallery: {
                    enabled:true
                }
            });
        },

        initZoom: function () {

            this.initBlock('.j-gallery');
            this.initBlock('.j-timeline');
            this.initBlock('.j-documents');
            
        },

        initTabs: function() {
            $('body').on('click', '.j-tab', function(e) {
                e.preventDefault();

                if (!$(this).hasClass('current')) {
                    var tab = $(this).attr('href').substr(2),
                        wrapper = $(this).data('wrapper');

                    $(this).closest('.j-tab-closest').find('.current').removeClass('current');

                    if ($('#tab-' + wrapper).length) {
                        var $items = $('#tab-' + wrapper).find('.is-item');

                        $items.removeClass('is-show');
                        $items.filter('.' + tab).addClass('is-show');
                    }

                    $(this).addClass('current');
                }
                
                return !1;
            });
        },

        initCarousel: function() {

            $('.j-carousel').slick({
                dots: false,
                infinite: true,
                draggable: true,
                speed: 259,
                slidesToShow: 4,
                slidesToScroll: 1,
                prevArrow: '<button type="button" class="carousel__navigation _prev slick-prev"></button>',
                nextArrow: '<button type="button" class="carousel__navigation _next slick-next"></button>',
                responsive: [
                    {
                        breakpoint: 1024,
                        settings: {
                            slidesToShow: 3,
                            slidesToScroll: 3,
                            infinite: true,
                            dots: true
                        }
                    },
                    {
                        breakpoint: 600,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: 2
                        }
                    },
                    {
                        breakpoint: 480,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    }
                ]
            });

        },

        initSlider: function() {

            $('.j-slider').slick({
                dots: false,
                infinite: true,
                draggable: true,
                fade: true,
                speed: 700,
                slidesToShow: 1,
                slidesToScroll: 1,
                prevArrow: '<button type="button" class="about__slider__navi _prev slick-prev"></button>',
                nextArrow: '<button type="button" class="about__slider__navi _next slick-next"></button>'
            });

        },

        initSwitcher: function() {
            var $slider = $('#slider'), timeout = 6000;

            $('body').on('change', '.j-switcher', function(){
                var daytime = $(this).val();
                $slider.find('.j-slider-item._active').addClass('_last-active');

                $slider.find('.j-slider-item._active').removeClass('_active');
                $slider.find('.j-slider-item').filter('[data-daytime="' + daytime + '"]').addClass('_active');

                setTimeout(function(){
                    $slider.find('.j-slider-item._last-active').removeClass('_last-active');
                }, 1000);
            });

            $('body').on('click', '.j-slider-navigation', function(){
                var direction = $(this).data('direction');

                var $group = $slider.find('.j-slider-item._active'),
                    _count = $group.find('.j-slider-image').length - 1,
                    _index = $group.find('.j-slider-image._active').index(),
                    _next = 0;

                if (direction == 'prev') {
                    _next = _index - 1;
                }
                else if (direction == 'next') {
                    _next = _index + 1;
                }

                if (_next > _count) {
                    _next = 0;
                }
                
                if (_next < 0) {
                    _next = _count;
                }

                $group.find('.j-slider-image._active').addClass('_last-active');
                $group.find('.j-slider-image._active').removeClass('_active');
                $group.find('.j-slider-image').eq(_next).addClass('_active');

                setTimeout(function(){
                    $group.find('.j-slider-image._last-active').removeClass('_last-active');
                }, 1000);
            });

            setInterval(function(){
                $('#slider-next').trigger('click');
            }, timeout);
        },

        initPlans: function() {
            var $popup = null;

            $('body').on('click', '.j-plans-layout', function(e){
                e.preventDefault();
                
                var image = $(this).attr('href'),
                    title = $(this).attr('title');

                $popup = $(template('tmpl-popup-layout', {
                    'title': title,
                    'image': image
                }));

                $popup.addClass('temp');
                
                $('body').append($popup);
                
                $.popup.show($popup, false, true);

                return !1;
            });
        },

        init: function() {
            this.initMask();
            this.initTabs();
            this.initZoom();
            this.initPlans();
            this.initPopup();
            this.initSlider();
            this.initSwitcher();
            this.initCarousel();
            this.initDocuments();
        }
    };

    app.init();
})(document.body);
//# sourceMappingURL=data:application/json;base64,
